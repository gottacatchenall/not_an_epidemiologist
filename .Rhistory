mean_r0 = make_vector_equiv_length(r0_est["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est[["Quantile.0.95(R)"]], timeseries)
return(data.frame(r0_est, date=date_vec))
}
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
print(timeseries)
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est[["Quantile.0.95(R)"]], timeseries)
return(data.frame(r0_est, date=date_vec))
}
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
print(timeseries)
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est[["Quantile.0.95(R)"]], timeseries)
return(data.frame(r0_est, date=date_vec))
}
compute_r0(denver_df$number_new_cases, denver_df$date)
county_level_data = county_level_covid_data %>% inner_join(county_demographics, by="fips")
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
print(timeseries)
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
county_level_data = county_level_covid_data %>% inner_join(county_demographics, by="fips")
compute_r0(denver_df$number_new_cases, denver_df$date)
r0_est = estimate_R(denver$number_new_cases, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
r0_est = estimate_R(denver$number_new_cases, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
r0_est = estimate_R(denver$number_new_cases, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
denver$number_new_cases[is.na(denver$number_new_cases)] = 0
r0_est = estimate_R(denver$number_new_cases, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
r0_est
r0_est$R
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
print(timeseries)
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
target_length = length(reference)
make_vector_equiv_length = function(input, reference){
target_length = length(reference)
length_to_add = target_length - length(input)
if (length_to_add <= 0){
return(input)
}
return(c(rep(NA, length_to_add), input))
}
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
denver_df = proc_data %>%
filter(state=='Colorado', county=='Denver') %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
denver_df
denver_df$mean_r0
title_str = paste('New Cases per capita, 5-day moving avg, ', max(county_level_data$date))
timeseries = denver_df %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = proc_data %>%
filter(state=='California', county %in% c("Los Angeles")) %>%
ggplot(aes(date, r0, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='Estimated R_0', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = proc_data %>%
filter(state=='California', county %in% c("Los Angeles")) %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='Estimated R_0', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = proc_data %>%
filter(state=='California', county %in% c("Los Angeles")) %>%
ggplot(aes(date, r0_mean, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='Estimated R_0', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = denver_df %>%
filter(state=='California', county %in% c("Los Angeles")) %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='Estimated R_0', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
denver_df$mean_r0
r0_plot = denver_df %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='Estimated R_0', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = denver_df %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='Estimated R_0', title=title_str) + scale_x_date(date_breaks = "3 weeks") + ylim(0.5, 2.5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
?geom_ribbon
r0_plot = denver_df %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(ymin=lower_r0, ymax=upper_r0)+ geom_line(size=2) +
labs(x='', y='Estimated R0', title="Estimated R0") + scale_x_date(date_breaks = "3 weeks") + ylim(0.5, 2.5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
denver_df
denver_df$lower_r0
r0_plot = denver_df %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0))+ geom_line(size=2) +
labs(x='', y='Estimated R0', title="Estimated R0") + scale_x_date(date_breaks = "3 weeks") + ylim(0.5, 2.5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = denver_df %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=2) +
labs(x='', y='Estimated R0', title="Estimated R0") + scale_x_date(date_breaks = "3 weeks") + ylim(0.5, 2.5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = denver_df %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y='Estimated R0', title="Estimated R0") + scale_x_date(date_breaks = "3 weeks") + ylim(0.5, 2.5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
install.packages('latex2exp')
library(latex2exp)
r0_plot = denver_df %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks = "3 weeks") + ylim(0.5, 2.5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
woah_nelly = proc_data %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
timeseries[timeseries < 0] = 0
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
woah_nelly = proc_data %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
timeseries[timeseries < 0] = 0
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
county_level_data = county_level_covid_data %>% inner_join(county_demographics, by="fips")
woah_nelly = proc_data %>% filter(state==Colorado, state==California, county %in% c("Denver", "Boulder", "Los Angeles"))
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles"))
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
timeseries[timeseries < 0] = 0
print(timeseries)
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
timeseries[timeseries < 0] = 0
if (length(timeseries) > 0){
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=3))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
}
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date)))
woah_nelly
woah_nelly$date
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips)
woah_nelly
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %
woah_nelly = proc_data %>% filter(state=="Colorado", state=="California", county %in% c("Denver", "Boulder", "Los Angeles"))
woah_nelly
woah_nelly = proc_data %>% filter(state=="Colorado" | state=="California", county %in% c("Denver", "Boulder", "Los Angeles"))
woah_nelly
woah_nelly = proc_data %>% filter(state=="Colorado" | state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
title_str = paste('New Cases per capita, 5-day moving avg, ', max(county_level_data$date))
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks = "3 weeks") + ylim(0.5, 2.5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks = "3 weeks") + ylim(0, 5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks = "3 weeks", min="2020-03-15") + ylim(0, 5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(min="2020-03-15") + ylim(0, 5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + geom_vline(size=3, color=black,xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + geom_vline(size=3, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot =
woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + geom_vline(size=3, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + geom_vline(size=2, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + facet_wrap(~county, ncol=1) + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + geom_vline(size=2, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1.5, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1.5, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks" + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1.5, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks" + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1.5, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) + geom_text('end of distancing')
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) + geom_text('end of distancing') +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(color='black', xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) + geom_text('end of distancing') +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(color='black', xintercept=as.numeric(as.Date("2020-06-05"))) + thm
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) + geom_text(aes(label='end of distancing', x="2020-06-05")) +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(color='black', xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7) + geom_text(aes(label='end of distancing', x=as.Date("2020-06-05"))) +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(color='black', xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(label="end of distancing", color='black', xintercept=as.numeric(as.Date("2020-06-05"))) + thm
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(text=end of distancing", color='black', xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) + facet_wrap(~county, ncol=1)+ geom_vline(size=1, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
ggsave("covid_jun20.png", device=png(), width=10, height=7)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks") + geom_vline(text="end of distancing", color='black', xintercept=as.numeric(as.Date("2020-06-05"))) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) +  geom_hline(yintercept=1) + facet_wrap(~county, ncol=1)+ geom_vline(size=1, color='black',xintercept=as.numeric(as.Date("2020-06-05"))) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks")  + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date("2020-03-15") + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(min="2020-04-01") + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(min=as.Date("2020-04-01")) + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(min=as.Date("2020-04-01")) + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
r0_plot
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 month", limits=as.Date(c("2020-04-01")) + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 month", limits=as.Date(c("2020-04-01"))) + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 month", limits=as.Date(c("2020-04-01"))) + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 month", limits=as.Date(c("2020-04-01", "2020-06-01"))) + ylim(0, 5) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 month", limits=as.Date(c("2020-04-01", "2020-06-01"))) + ylim(0, 2) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 month", limits=as.Date(c("2020-04-01", "2020-06-01"))) + ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="2 weeks", limits=as.Date(c("2020-04-01", "2020-06-01"))) + ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-06-01"))) + ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-06-01"))) + ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) thm
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) + scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-06-01"))) + ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") + facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + thm
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-06-01"))) +
ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-06-01"))) +
ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=2,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks")  + thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.5, 2) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.5, 2.5) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.5, 3) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=1.5,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks")  + thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="1 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.5, 3) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="2 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.4, 3) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
timeseries[timeseries < 0] = 0
if (length(timeseries) > 0){
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=1))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
}
woah_nelly = proc_data %>% filter(state=="Colorado" | state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
title_str = paste('New Cases per capita, 5-day moving avg, ', max(county_level_data$date))
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=1.5,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks")  + thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="2 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.4, 3) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
compute_r0 = function(timeseries,date_vec){
timeseries[is.na(timeseries)] = 0
timeseries[timeseries < 0] = 0
if (length(timeseries) > 0){
r0_est = estimate_R(timeseries, method="parametric_si", config=make_config(mean_si=5.4, std_si=5))
mean_r0 = make_vector_equiv_length(r0_est$R[["Mean(R)"]], timeseries)
lower_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.05(R)"]], timeseries)
upper_r0 = make_vector_equiv_length(r0_est$R[["Quantile.0.95(R)"]], timeseries)
return(data.frame(mean_r0=mean_r0, lower_r0=lower_r0, upper_r0=upper_r0, date=date_vec))
}
}
county_level_data = county_level_covid_data %>% inner_join(county_demographics, by="fips")
woah_nelly = proc_data %>% filter(state=="Colorado" | state=="California", county %in% c("Denver", "Boulder", "Los Angeles")) %>%
arrange(date) %>%
group_by(fips) %>%
do(merge(.,compute_r0(.$number_new_cases, .$date), by="date"))
title_str = paste('New Cases per capita, 5-day moving avg, ', max(county_level_data$date))
timeseries = woah_nelly %>%
ggplot(aes(date, new_cases_moving_average, color=county, group=county)) + geom_line(size=1.5,alpha=0.7)  +
labs(x='', y='New Cases per capita', title=title_str) + scale_x_date(date_breaks = "3 weeks")  + thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
r0_plot = woah_nelly %>%
ggplot(aes(date, mean_r0, color=county, group=county)) + geom_ribbon(aes(ymin=lower_r0, ymax=upper_r0), alpha=0.2)+ geom_line(size=1) +
labs(x='', y=TeX("$R_0$"), title=TeX("Estimated $R_0$")) +
scale_x_date(date_breaks="2 week", limits=as.Date(c("2020-04-01", "2020-07-01"))) +
ylim(0.4, 3) +  geom_hline(yintercept=1, color="black") +
facet_wrap(~county, ncol=1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
thm + geom_vline(xintercept=as.Date("2020-06-01"), color="green")
grid.arrange(timeseries, r0_plot, ncol=2)
